The ``101-lazy_matrix_mul.py`` module
======================

Using ``lazy_matrix_mul``
-------------------

This is an example text file in reStructuredText format. 
First
import ``lazy_matrix_mul`` from the ``101-lazy_matrix_mul.py`` module:

>>> lazy_matrix_mul = __import__('101-lazy_matrix_mul').lazy_matrix_mul

Now use it:

normal / base case
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]

First argument is not a list
>>> lazy_matrix_mul("hello", [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

Second argument is not a list
>>> lazy_matrix_mul([[1, 2], [3, 4]], "hello")
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

First argument is not a list of list
>>> lazy_matrix_mul([1, 2, 3, 4], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list of lists

Second argument is not a list of list
>>> lazy_matrix_mul([[1, 2], [3, 4]], [1, 2, 3, 4])
Traceback (most recent call last):
    ...
TypeError: m_b must be a list of lists

a list is empty
>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

b list is empty
>>> lazy_matrix_mul([[1, 2], [3, 4]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

a list of list is empty
>>> lazy_matrix_mul([[], [3, 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

an element of a list is not int or float
>>> lazy_matrix_mul([[1, 2], ['3', 4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

an element of b list is not int or float
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, '2'], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

lists a in different sizes
>>> lazy_matrix_mul([[1, 2], [4]], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

lists b in different sizes
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: each row of m_b must be of the same size

can't be multiplied
>>> lazy_matrix_mul([[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied