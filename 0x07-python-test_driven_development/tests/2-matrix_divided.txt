The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
-------------------

This is an example text file in reStructuredText format. 
First
import ``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

the base / normal case
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

dividing by a string
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], "ahmed")
Traceback (most recent call last):
    ...
TypeError: div must be a number

dividing by 0
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

list containing string
>>> matrix_divided([[1, "2", 3],[4, 5, 6]], 4)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

rows in different size
>>> matrix_divided([[1, 3],[4, 5, 6]], 4)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

divide by infinate float
>>> matrix_divided([[1, 2, 3],[4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

missing 1 argument
>>> matrix_divided([[1, 2, 3],[4, 5, 6]],)
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

missing 2 arguments
>>> matrix_divided()
Traceback (most recent call last):
    ...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'