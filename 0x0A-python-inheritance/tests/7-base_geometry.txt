The ``7-base_geometry`` module
======================

Using ``BaseGeometry``
-------------------

This is an example text file in reStructuredText format.
First import
``BaseGeometry`` from the ``example`` module:

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Now use it:

>>> base_geometry = BaseGeometry()

normal / base case
>>> base_geometry.integer_validator("name", 4)


passing string instead of int
>>> base_geometry.integer_validator("name", "John")
Traceback (most recent call last):
	...
TypeError: name must be an integer

passing value equal to 0
>>> base_geometry.integer_validator("age", 0)
Traceback (most recent call last):
	...
ValueError: age must be greater than 0

passing value less than 0
base_geometry.integer_validator("distance", -4)
Traceback (most recent call last):
	...
ValueError: distance must be greater than 0

empty area
>>> base_geometry.area()
Traceback (most recent call last):
	...
Exception: area() is not implemented

missing 1 argument
>>> base_geometry.integer_validator("distance")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'

missing 2 arguments
>>> base_geometry.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

passing tuple
>>> base_geometry.integer_validator("age", (4,))
Traceback (most recent call last):
	...
TypeError: age must be an integer

passing list
>>> base_geometry.integer_validator("age", [3])
Traceback (most recent call last):
	...
TypeError: age must be an integer

passing boolean
>>> base_geometry.integer_validator("age", True)
Traceback (most recent call last):
	...
TypeError: age must be an integer

passing set
>>> base_geometry.integer_validator("age",{3, 4})
Traceback (most recent call last):
	...
TypeError: age must be an integer

passing none
>>> base_geometry.integer_validator("age", None)
Traceback (most recent call last):
	...
TypeError: age must be an integer